/*
 * generated by Xtext
 */
package eu.supersede.dynadapt.dsl.scoping

import org.eclipse.xtext.scoping.IScope
import eu.supersede.dynadapt.dsl.aspect.Aspect
import org.eclipse.emf.ecore.EReference
import eu.supersede.dynadapt.aom.dsl.extensionpoint.RegisteredModelResources
import org.eclipse.xtext.scoping.impl.SimpleScope

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 *
 */
class AspectScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	def IScope scope_Aspect_advice(Aspect aspect, EReference ref) {
		var scope = delegate.getScope(aspect, ref);
		val converter = aspect.eResource.resourceSet.URIConverter;
		val preloadedURIs = RegisteredModelResources.getInstance.URIs.map[u | converter.normalize(u)].toSet;
		scope = new SimpleScope(scope.allElements.filter[desc | !preloadedURIs.contains(converter.normalize(desc.EObjectURI).trimFragment)]);
		return scope;
	}
}
